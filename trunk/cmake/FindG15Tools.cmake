FIND_PATH( LIBG15_INCLUDE_DIR libg15.h /usr/include /usr/local/include )
FIND_PATH( LIBG15RENDER_INCLUDE_DIR libg15render.h /usr/include /usr/local/include )

FIND_LIBRARY( LIBG15_LIBRARY NAMES g15 PATH /usr/lib /usr/local/lib )
FIND_LIBRARY( LIBG15RENDER_LIBRARY NAMES g15render PATH /usr/lib /usr/local/lib )

IF( LIBG15_INCLUDE_DIR AND LIBG15_LIBRARY )
   SET( LIBG15_FOUND TRUE )
ENDIF( LIBG15_INCLUDE_DIR AND LIBG15_LIBRARY )

IF( LIBG15RENDER_INCLUDE_DIR AND LIBG15RENDER_LIBRARY )
   SET( LIBG15RENDER_FOUND TRUE )
ENDIF( LIBG15RENDER_INCLUDE_DIR AND LIBG15RENDER_LIBRARY )

IF( LIBG15_FOUND AND LIBG15RENDER_FOUND )
   SET( G15TOOLS_FOUND TRUE )
   SET( G15TOOLS_INCLUDES ${LIBG15_INCLUDE_DIR} ${LIBG15RENDER_INCLUDE_DIR} )
   SET( G15TOOLS_LIBRARY ${LIBG15_LIBRARY} ${LIBG15RENDER_LIBRARY} )
ENDIF( LIBG15_FOUND AND LIBG15RENDER_FOUND )

IF( LIBG15_FOUND )
   IF( NOT libg15_FIND_QUIETLY )
      MESSAGE( STATUS "Found libg15: ${LIBG15_LIBRARY}" )
   ENDIF( NOT libg15_FIND_QUIETLY )
ELSE( LIBG15_FOUND )
   IF( libg15_FIND_REQUIRED )
      MESSAGE( FATAL_ERROR "Could not find libg15" )
   ENDIF( libg15_FIND_REQUIRED )
ENDIF( LIBG15_FOUND )

IF( LIBG15RENDER_FOUND )
   IF( NOT libg15render_FIND_QUIETLY )
      MESSAGE( STATUS "Found libg15render: ${LIBG15RENDER_LIBRARY}" )
   ENDIF( NOT libg15render_FIND_QUIETLY )
ELSE( LIBG15RENDER_FOUND )
   IF( libg15render_FIND_REQUIRED )
      MESSAGE( FATAL_ERROR "Could not find libg15render" )
   ENDIF( libg15render_FIND_REQUIRED )
ENDIF( LIBG15RENDER_FOUND )

IF( G15TOOLS_FOUND )
   IF( NOT g15tools_FIND_QUIETLY )
      MESSAGE( STATUS "Found g15tools: ${LIBG15_LIBRARY} ${LIBG15RENDER_LIBRARY}" )
   ENDIF( NOT g15tools_FIND_QUIETLY )
ELSE( G15TOOLS_FOUND )
   IF( g15tools_FIND_REQUIRED )
      MESSAGE( FATAL_ERROR "Could not find g15tools" )
   ENDIF( g15tools_FIND_REQUIRED )
ENDIF( G15TOOLS_FOUND )
